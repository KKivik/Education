import pygame

class Board:
    # создание поля
    def __init__(self, width, height):
        self.width = width
        self.height = height
        self.board = [[0] * width for _ in range(height)]
        # значения по умолчанию
        self.left = 10
        self.top = 10
        self.cell_size = 30

    # настройка внешнего вида
    def set_view(self, left, top, cell_size):
        self.left = left
        self.top = top
        self.cell_size = cell_size

    def render(self, screen):
        x = self.left
        y = self.top
        for i in self.board:
            for j in i:
                pygame.draw.rect(screen, pygame.Color('white'), (x, y, self.cell_size, self.cell_size), 1)
                print(self.get_cell((50,70)))
                x += self.cell_size
            y += self.cell_size
            x = self.left

    def get_cell(self, mouse_pos): #mouse_pos - кортеж
        x, y = mouse_pos
        if x >= self.left and x <= self.left + self.cell_size * len(self.board[0]) and y >= self.top and y <= self.top + self.cell_size * len(self.board[0]):
            x -= self.left
            y -= self.top
            x_r = x // self.cell_size + bool(x % self.cell_size)
            y_r = y // self.cell_size + bool(y % self.cell_size)
            print(x_r, y_r)


if __name__ == '__main__':
    pygame.init()
    size = width, height = 800, 600
    screen = pygame.display.set_mode(size)

    fps = 50  # количество кадров в секунду
    clock = pygame.time.Clock()
    running = True

    board = Board(4, 3)
    # board.set_view(100, 100, 50)

    while running:  # главный игровой цикл
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                running = False
        screen.fill((0, 0, 0))
        board.render(screen)

        pygame.display.flip()  # смена кадра
        # изменение игрового мира
        # ...
        # временная задержка
        clock.tick(fps)

    pygame.quit()
